# Validate the director resources and test recipes
dir_path = '/etc/bareos/bareos-dir.d'

%w(
  bareos-director
  bareos-database-common
  bareos-database-tools
  bareos-database-postgresql
).each do |pkg|
  describe package(pkg) do
    it { should be_installed }
  end
end

describe directory(dir_path) do
  it { should exist }
end

%w(
  /catalog
  /client
  /console
  /counter
  /director
  /fileset
  /job
  /jobdefs
  /messages
  /pool
  /profile
  /schedule
  /storage
).each do |dir|
  describe directory(dir_path + dir) do
    it { should exist }
  end
end

%w(
  /catalog/MyCatalog.conf
  /client/bareos-fd.conf
  /console/bareos-mon.conf
  /director/bareos-dir.conf
  /fileset/Catalog.conf
  /fileset/LinuxAll.conf
  /fileset/SelfTest.conf
  /fileset/test-1-all.conf
  /fileset/test-2-custom-strings-only.conf
  /fileset/test-3-includes-only-with-nil.conf
  /fileset/test-4-excludes-only-with-empty.conf
  /fileset/test-5-none.conf
  /fileset/Windows\ All\ Drives.conf
  /job/backup-bareos-fd.conf
  /job/BackupCatalog.conf
  /job/RestoreFiles.conf
  /jobdefs/DefaultJob.conf
  /messages/Daemon.conf
  /messages/Standard.conf
  /pool/Differential.conf
  /pool/Full.conf
  /pool/Incremental.conf
  /pool/Scratch.conf
  /profile/operator.conf
  /schedule/FirstOfMonthExample.conf
  /schedule/WeeklyCycleAfterBackup.conf
  /schedule/WeeklyCycle.conf
  /storage/autochanger-1-test.conf
  /storage/autochanger-2-test.conf
  /storage/File.conf
).each do |config|
  describe file(dir_path + config) do
    it { should exist }
    its('content') { should match(/Generated by Chef/) }
    its('content') { should match(/Name = MyCatalog/) } if config == '/catalog/MyCatalog.conf'
  end
end

describe directory('/etc/dbconfig-common') do
  it { should exist }
end

%w(
  config
  bareos-database-common.conf
).each do |config|
  describe file("/etc/dbconfig-common/#{config}") do
    it { should exist }
    its('content') { should match(/Generated by Chef/) }
    its('content') { should match(/dbc_install='false'/) } if config == 'bareos-database-common.conf'
    its('content') { should match(/dbc_upgrade='false'/) } if config == 'bareos-database-common.conf'
    its('content') { should match(/dbc_remove='false'/) } if config == 'bareos-database-common.conf'
    its('content') { should match(/dbc_remember_admin_pass='false'/) } if config == 'config'
    its('content') { should match(/dbc_remote_questions_default='false'/) } if config == 'config'
  end
end

%w(
  .dbcreated_MyCatalog
  .dbtabcreated_MyCatalog
  .dbtabupdated_MyCatalog
  .dbprivgranted_MyCatalog
).each do |state|
  describe file("/var/lib/bareos/#{state}") do
    it { should exist }
  end
end

describe service('bareos-dir') do
  it { should be_installed }
  it { should be_enabled }
  it { should be_running }
end
